// Code generated by "stringer -type=tokenRoot -output=tokens_root_auto.go -trimprefix=root"; DO NOT EDIT.

package tokenizer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[rootUndefined-0]
	_ = x[rootConsonant-1]
	_ = x[rootTildeN-2]
	_ = x[rootCedilla-3]
	_ = x[rootVowel-4]
	_ = x[rootApostrophe-5]
	_ = x[rootHyphen-6]
}

const _tokenRoot_name = "UndefinedConsonantTildeNCedillaVowelApostropheHyphen"

var _tokenRoot_index = [...]uint8{0, 9, 18, 24, 31, 36, 46, 52}

func (i tokenRoot) String() string {
	if i < 0 || i >= tokenRoot(len(_tokenRoot_index)-1) {
		return "tokenRoot(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _tokenRoot_name[_tokenRoot_index[i]:_tokenRoot_index[i+1]]
}
